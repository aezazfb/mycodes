using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using slashMvC.Models;
using MongoDB.Bson;
using MongoDB.Driver;
using System.Configuration;
using System.IO;
using System.Net;
using System.Text;

namespace slashMvC.Controllers
{
    public class taxiController : Controller
    {
        // GET: taxi
        public ActionResult Index()
        {
            return View();
        }

        [HttpPost]

        public ActionResult Index(taxiclass tx)
        {
            if (ModelState.IsValid)
            {
                string con_str = ConfigurationManager.AppSettings["connectionString"];
                var conn = new MongoClient(con_str);
                var db = conn.GetDatabase("april19Db");
                var coll = db.GetCollection<taxiclass>("taxiData");
                coll.InsertOneAsync(tx);


            }
            return View();
        }

        [HttpPost]

        public ActionResult UploadFiles()
        {
            if (Request.Files.Count > 0)
            {
                var files = Request.Files;

                //iterating through multiple file collection   
                foreach (string str in files)
                {
                    HttpPostedFileBase file = Request.Files[str] as HttpPostedFileBase;
                    //Checking file is available to save.  
                    if (file != null)
                    {
                        var InputFileName = Path.GetFileName(file.FileName);
                        var ServerSavePath = Path.Combine(Server.MapPath("~/Uploads/") + InputFileName);
                        //C://Users//User//Desktop//mypub//imgg
                        //Save file to server folder  
                        //var path = Path.Combine(Server.MapPath, "/App_Data/userfiles/"), userId);
                        var dir = Directory.CreateDirectory(ServerSavePath);
                        //cvfile.SaveAs(Path.Combine(path, bareFilename);
                        file.SaveAs(ServerSavePath);

                        //FTP Server URL.
                        string ftp = "ftp://yourserver.com/";

                        //FTP Folder name. Leave blank if you want to upload to root folder.
                        string ftpFolder = "Uploads/";


                    }

                }
                return Json("File Uploaded Successfully!");
            }
            else
            {
                return Json("No files to upload");
            }
        }

        protected void FTPUpload(object sender, EventArgs e)
        {
            //FTP Server URL.
            string ftp = "ftp://yourserver.com/";

            //FTP Folder name. Leave blank if you want to upload to root folder.
            string ftpFolder = "Uploads/";

            byte[] fileBytes = null;

            //Read the FileName and convert it to Byte array.
            string fileName = Path.GetFileName(FileUpload1.FileName);
            using (StreamReader fileStream = new StreamReader(FileUpload1.PostedFile.InputStream))
            {
                fileBytes = Encoding.UTF8.GetBytes(fileStream.ReadToEnd());
                fileStream.Close();
            }

            try
            {
                //Create FTP Request.
                FtpWebRequest request = (FtpWebRequest)WebRequest.Create(ftp + ftpFolder + fileName);
                request.Method = WebRequestMethods.Ftp.UploadFile;

                //Enter FTP Server credentials.
                request.Credentials = new NetworkCredential("UserName", "Password");
                request.ContentLength = fileBytes.Length;
                request.UsePassive = true;
                request.UseBinary = true;
                request.ServicePoint.ConnectionLimit = fileBytes.Length;
                request.EnableSsl = false;

                using (Stream requestStream = request.GetRequestStream())
                {
                    requestStream.Write(fileBytes, 0, fileBytes.Length);
                    requestStream.Close();
                }

                FtpWebResponse response = (FtpWebResponse)request.GetResponse();

               // lblMessage.Text += fileName + " uploaded.<br />";
                response.Close();
            }
            catch (WebException ex)
            {
                throw new Exception((ex.Response as FtpWebResponse).StatusDescription);
            }
        }

    }

    
}
